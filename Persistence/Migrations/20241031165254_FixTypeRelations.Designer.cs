// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ListingDbContext))]
    [Migration("20241031165254_FixTypeRelations")]
    partial class FixTypeRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Persistence.Entities.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("Country")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("ListingAddress1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("ListingAddress2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("ListingAddressFull")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("");

                    b.HasKey("AddressId");

                    b.HasIndex("PropertyId")
                        .IsUnique();

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Persistence.Entities.Listing", b =>
                {
                    b.Property<int>("ListingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListingProviderId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("RealEstateListingSiteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListingId");

                    b.HasIndex("RealEstateListingSiteId");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.HasIndex(new[] { "ListingProviderId" }, "IX_Listing_ListingProviderId");

                    b.ToTable("Listings");
                });

            modelBuilder.Entity("Persistence.Entities.ListingEntity", b =>
                {
                    b.Property<int>("ListingEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ListingEntityId");

                    b.HasIndex("PropertyId");

                    b.ToTable("ListingEntities");
                });

            modelBuilder.Entity("Persistence.Entities.Property", b =>
                {
                    b.Property<int>("PropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ListingAgentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ListingId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ListingOfficeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PropertyId");

                    b.HasIndex("ListingAgentId");

                    b.HasIndex("ListingId");

                    b.HasIndex("ListingOfficeId");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.ToTable("Property");
                });

            modelBuilder.Entity("Persistence.Entities.PropertyDetails", b =>
                {
                    b.Property<int>("PropertyDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BaseImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<float>("Bathrooms")
                        .HasColumnType("REAL");

                    b.Property<float>("Bedrooms")
                        .HasColumnType("REAL");

                    b.Property<float>("LivingArea")
                        .HasColumnType("REAL");

                    b.Property<float>("LotSizeAcres")
                        .HasColumnType("REAL");

                    b.Property<float>("LotSizeSqFeet")
                        .HasColumnType("REAL");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PriceChange")
                        .HasColumnType("TEXT");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearBuilt")
                        .HasColumnType("INTEGER");

                    b.HasKey("PropertyDetailsId");

                    b.HasIndex("PropertyId")
                        .IsUnique();

                    b.ToTable("PropertyDetails");
                });

            modelBuilder.Entity("Persistence.Entities.PropertyType", b =>
                {
                    b.Property<int>("PropertyTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("PropertyTypeId");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            PropertyTypeId = 1,
                            Name = "Single Family"
                        },
                        new
                        {
                            PropertyTypeId = 2,
                            Name = "Land"
                        });
                });

            modelBuilder.Entity("Persistence.Entities.RealEstateListingSite", b =>
                {
                    b.Property<int>("RealEstateListingSiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("RealEstateListingSiteId");

                    b.ToTable("RealEstateListingSites");

                    b.HasData(
                        new
                        {
                            RealEstateListingSiteId = 1,
                            Name = "Remax"
                        },
                        new
                        {
                            RealEstateListingSiteId = 2,
                            Name = "Zillow"
                        });
                });

            modelBuilder.Entity("Persistence.Entities.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ResourceId");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("Persistence.Entities.Address", b =>
                {
                    b.HasOne("Persistence.Entities.Property", "Property")
                        .WithOne("Address")
                        .HasForeignKey("Persistence.Entities.Address", "PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Persistence.Entities.Listing", b =>
                {
                    b.HasOne("Persistence.Entities.RealEstateListingSite", "RealEstateListingSite")
                        .WithMany("Listing")
                        .HasForeignKey("RealEstateListingSiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.Resource", "Resource")
                        .WithOne("Listing")
                        .HasForeignKey("Persistence.Entities.Listing", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RealEstateListingSite");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Persistence.Entities.ListingEntity", b =>
                {
                    b.HasOne("Persistence.Entities.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyId");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Persistence.Entities.Property", b =>
                {
                    b.HasOne("Persistence.Entities.ListingEntity", "ListingAgent")
                        .WithMany()
                        .HasForeignKey("ListingAgentId");

                    b.HasOne("Persistence.Entities.Listing", "Listing")
                        .WithMany("Properties")
                        .HasForeignKey("ListingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.ListingEntity", "ListingOffice")
                        .WithMany()
                        .HasForeignKey("ListingOfficeId");

                    b.HasOne("Persistence.Entities.PropertyType", "PropertyType")
                        .WithMany("Property")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.Entities.Resource", "Resource")
                        .WithOne("Property")
                        .HasForeignKey("Persistence.Entities.Property", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Listing");

                    b.Navigation("ListingAgent");

                    b.Navigation("ListingOffice");

                    b.Navigation("PropertyType");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Persistence.Entities.PropertyDetails", b =>
                {
                    b.HasOne("Persistence.Entities.Property", "Property")
                        .WithOne("PropertyDetails")
                        .HasForeignKey("Persistence.Entities.PropertyDetails", "PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Persistence.Entities.Listing", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Persistence.Entities.Property", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("PropertyDetails");
                });

            modelBuilder.Entity("Persistence.Entities.PropertyType", b =>
                {
                    b.Navigation("Property");
                });

            modelBuilder.Entity("Persistence.Entities.RealEstateListingSite", b =>
                {
                    b.Navigation("Listing");
                });

            modelBuilder.Entity("Persistence.Entities.Resource", b =>
                {
                    b.Navigation("Listing");

                    b.Navigation("Property");
                });
#pragma warning restore 612, 618
        }
    }
}
